{"version":3,"sources":["components/Jumbotron/index.js","components/Wrapper/index.js","components/NavBar/index.js","components/Card/index.js","App.js","index.js"],"names":["Jumbotron","props","react_default","a","createElement","className","Wrapper","children","NavBar","messageClass","gameMessage","id","score","highscore","Card","value","onClick","handleClick","src","image","alt","name","App","state","clicked","this","setState","snowflakes","i","length","j","Math","floor","random","_ref","newScore","newHighScore","_this2","components_Wrapper","components_NavBar","components_Jumbotron","map","snowflake","components_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"msDAWeA,MARf,SAAmBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,kGCAWE,MAJf,SAAiBL,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMM,iBCgB1BC,MAjBf,SAAgBP,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAClBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,qBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAMQ,cAChBR,EAAMS,aAEXR,EAAAC,EAAAC,cAAA,MAAIO,GAAG,SAAP,UACYV,EAAMW,MADlB,kBACwCX,EAAMY,cCEzCC,SAZF,SAAAb,GAAK,OAEdC,EAAAC,EAAAC,cAAA,OACIC,UAAWJ,EAAMI,UACjBU,MAAOd,EAAMU,GACbK,QAASf,EAAMgB,aAEff,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAea,IAAKjB,EAAMkB,MAAOC,IAAKnB,EAAMoB,iBCwFpDC,6MAzFXC,MAAQ,CACNC,QAAS,GACTZ,MAAO,EACPC,UAAW,EACXH,YAAa,GACbD,aAAc,uFAKhBgB,KAAKC,SAAS,CACVhB,YAAa,kEA+BRiB,GACX,IAAK,IAAIC,EAAID,EAAWE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC9C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADIM,EAEb,CAACP,EAAWG,GAAIH,EAAWC,IAA3DD,EAAWC,GAFkCM,EAAA,GAE9BP,EAAWG,GAFmBI,EAAA,2CAQhD,IAAIC,EAAWV,KAAKF,MAAMX,MACtBwB,EAAeX,KAAKF,MAAMV,UAC3BuB,EAAeD,GAChBV,KAAKC,SAAS,CACVb,UAAWuB,qCAMV,IAAAC,EAAAZ,KACL,OACEvB,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CACE9B,aAA0C,cAA5BgB,KAAKF,MAAMd,aAA+B,YAA0C,YAA5BgB,KAAKF,MAAMd,aAA6B,UAAY,GAC1HC,YAAae,KAAKF,MAAMb,YACxBE,MAAOa,KAAKF,MAAMX,MAClBC,UAAWY,KAAKF,MAAMV,YAExBX,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZsB,EAAWc,IAAI,SAAAC,GAAS,OACvBxC,EAAAC,EAAAC,cAACuC,EAAD,CACEtC,UAAW,OACXuC,IAAKF,EAAU/B,GACfU,KAAMqB,EAAUrB,KAChBF,MAAOuB,EAAUvB,MACjBF,YAAaoB,EAAKpB,0BAhFhB4B,mBCHlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.aa39bb68.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron(props) {\n    return <div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\">\n    <h1>Clicky Game!</h1>\n    <p>Click on a SnowFlake to earn points, but don't click a flake more than once!</p>\n  </div>\n</div>\n}\nexport default Jumbotron\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n  return <nav className=\"navbar fixed-top\">\n      <ul>\n          <li className=\"brand\">\n              React Clicky Game\n          </li>\n          <li className={props.messageClass}>\n              {props.gameMessage}\n          </li>\n          <li id=\"score\">\n              Score: {props.score} | High Score: {props.highscore}\n          </li>\n      </ul>\n  </nav>\n}\n\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n\n    <div\n        className={props.className}\n        value={props.id}\n        onClick={props.handleClick}\n    >\n        <img className=\"card-img-top\" src={props.image} alt={props.name} />\n    </div>\n\n)\n\nexport default Card;\n\n","import React, { Component } from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport Card from \"./components/Card\";\nimport snowflakes from \"./snowflakes.json\"\n\n//set the initial state of each component.  Acivity 27.  \nclass App extends Component {\n    state = {\n      clicked: [],\n      score: 0,\n      highscore: 0,\n      gameMessage: \"\",\n      messageClass: \"\"\n    };\n\n// Render element with updated data.  \ncomponentDidMount() {\n    this.setState({\n        gameMessage: \"Click an image to begin!\",\n    });\n};\n\n// handleClick = (event) => {\n//   this.setState({\n//     //Add the div's alt value to the clicked array\n//     clicked: [...this.state.clicked, event.target.alt]\n//   });\n//   //If the name is already in the clicked array set score back to 0 and empty clicked array\n//   if (this.state.clicked.includes(event.target.alt)) {\n//     this.setState({\n//       gameMessage: \"You guessed incorrectly!\",\n//       score: 0,\n//       clicked: [],\n//       messageClass: \"incorrect\"\n//     });\n//   } else {\n//     //If the name is not in the clicked array, add 1 to the current score\n//     this.setState({\n//       gameMessage: \"You guessed correctly!\",\n//       score: this.state.score + 1,\n//       highscore: Math.max(this.state.score + 1),\n//       messageClass: \"correct\"\n//     })\n//   };\n//   this.setHighScore();\n//   this.shuffleArray(snowflakes);\n// };\n\n// Shuffle an array - Javascript.info\nshuffleArray(snowflakes) {\n  for (let i = snowflakes.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [snowflakes[i], snowflakes[j]] = [snowflakes[j], snowflakes[i]];\n  };\n};\n\n// Activity 5 \nsetHighScore(){\n  let newScore = this.state.score;\n  let newHighScore = this.state.highscore\n  if(newHighScore > newScore){\n    this.setState({\n        highscore: newHighScore\n    })\n  }\n}\n\n// Activity 17 - 18 - 19 - 29\nrender() {\n    return (\n      <Wrapper>\n        <NavBar\n          messageClass={this.state.messageClass === \"incorrect\" ? \"incorrect\" : this.state.messageClass === \"correct\" ? \"correct\" : \"\"}\n          gameMessage={this.state.gameMessage}\n          score={this.state.score}\n          highscore={this.state.highscore}\n        />\n        <Jumbotron />\n        <div className=\"container\">\n          <div className=\"row\">\n            {snowflakes.map(snowflake => (\n              <Card\n                className={\"card\"}\n                key={snowflake.id}\n                name={snowflake.name}\n                image={snowflake.image}\n                handleClick={this.handleClick}\n              ></Card>\n            ))}\n          </div>\n        </div>\n      </Wrapper>\n    );\n  };\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}